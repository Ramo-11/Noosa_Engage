<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Schedule a Session - Noosa Engage</title>
    <meta name="description" content="Schedule your personalized tutoring session with our expert instructors. Choose your subject, date, and time that works best for you.">
    
    <!-- Stylesheets -->
    <link rel="stylesheet" href="/styles/general.css">
    <link rel="stylesheet" href="/styles/nav.css">
    <link rel="stylesheet" href="/styles/schedule.css">
    <link rel="stylesheet" href="/styles/footer.css">
    <link rel="shortcut icon" href="/images/Logo-white.png">
    
    <!-- Google Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    
    <!-- Flatpickr CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css"/>
    
    <!-- Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-XEW6Y9S2YM"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());
        gtag('config', 'G-XEW6Y9S2YM');
    </script>
</head>
<body>
    <%- include("./partials/nav.ejs") %>
    
    <main class="main-content">
        <!-- Hero Section -->
        <section class="schedule-hero">
            <div class="schedule-hero-content">
                <h1 class="schedule-hero-title">Schedule Your Session</h1>
                <p class="schedule-hero-subtitle">
                    Book a personalized tutoring session with our expert instructors. 
                    Choose your subject, preferred date, and time that works best for your schedule.
                </p>
            </div>
        </section>

        <!-- Schedule Section -->
        <section class="schedule-section">
            <div class="schedule-container">
                <div class="schedule-card">
                    <!-- Header -->
                    <div class="schedule-header">
                        <div class="schedule-icon">
                            <i class="fas fa-calendar-plus"></i>
                        </div>
                        <h2 class="schedule-title">Book Your Appointment</h2>
                        <p class="schedule-subtitle">Fill out the details below to schedule your tutoring session</p>
                    </div>

                    <!-- Alert Message -->
                    <div id="scheduleAlert" class="schedule-alert" style="display: none;">
                        <i class="fas fa-info-circle"></i>
                        <span id="alertMessage"></span>
                    </div>

                    <!-- Schedule Form -->
                    <form class="schedule-form" id="scheduleForm" data-custom-submit="true">
                        <!-- Course Selection -->
                        <div class="form-group">
                            <label for="course" class="form-label">
                                <i class="fas fa-book"></i>
                                Select a Course *
                            </label>
                            <div class="form-input-container">
                                <select id="course" name="course" class="form-select" required>
                                    <option value="" disabled selected>Choose your subject...</option>
                                    <option value="all">All Subjects</option>
                                    <option value="algebra">Algebra</option>
                                    <option value="arabic">Arabic</option>
                                    <option value="chemistry">Chemistry</option>
                                    <option value="data-structures-algorithms">Data Structures and Algorithms</option>
                                    <option value="databases">Databases</option>
                                    <option value="geometry">Geometry</option>
                                    <option value="introduction-to-programming">Programming</option>
                                    <option value="oop">Object-Oriented Programming</option>
                                    <option value="physics">Physics</option>
                                    <option value="pre-algebra">Pre-Algebra</option>
                                    <option value="pre-calculus">Pre-Calculus</option>
                                    <option value="quran">Quran</option>
                                    <option value="web-development">Web Development</option>
                                </select>
                            </div>
                            <div class="form-error" id="courseError" style="display: none;">
                                <i class="fas fa-exclamation-circle"></i>
                                <span></span>
                            </div>
                        </div>

                        <!-- Date Selection -->
                        <div class="form-group" id="dateContainer" style="display: none;">
                            <label for="date" class="form-label">
                                <i class="fas fa-calendar-alt"></i>
                                Select Date *
                            </label>
                            <div class="form-input-container">
                                <input 
                                    type="text" 
                                    id="date" 
                                    name="date" 
                                    class="form-input" 
                                    placeholder="Click to select a date"
                                    readonly
                                    required
                                >
                            </div>
                            <div class="form-error" id="dateError" style="display: none;">
                                <i class="fas fa-exclamation-circle"></i>
                                <span></span>
                            </div>
                        </div>

                        <!-- Time Selection -->
                        <div class="form-group" id="timeContainer" style="display: none;">
                            <label for="time" class="form-label">
                                <i class="fas fa-clock"></i>
                                Select Time *
                            </label>
                            <div class="form-input-container">
                                <select id="time" name="time" class="form-select" required>
                                    <option value="" disabled selected>Choose your preferred time...</option>
                                </select>
                            </div>
                            <div class="form-error" id="timeError" style="display: none;">
                                <i class="fas fa-exclamation-circle"></i>
                                <span></span>
                            </div>
                        </div>

                        <!-- Submit Button -->
                        <button type="submit" class="schedule-submit" id="submitButton">
                            <span id="buttonText">
                                <i class="fas fa-calendar-check"></i>
                                Schedule Appointment
                            </span>
                            <div class="spinner" id="buttonSpinner" style="display: none;"></div>
                        </button>
                    </form>

                    <!-- Help Text -->
                    <div class="schedule-help">
                        <div class="help-item">
                            <i class="fas fa-info-circle"></i>
                            <span>Sessions are typically 60 minutes long</span>
                        </div>
                        <div class="help-item">
                            <i class="fas fa-video"></i>
                            <span>All sessions are conducted online via video call</span>
                        </div>
                        <div class="help-item">
                            <i class="fas fa-calendar-times"></i>
                            <span>You can reschedule with 24 hours notice</span>
                        </div>
                    </div>
                </div>

                <!-- Info Panel -->
                <div class="schedule-info">
                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-user-graduate"></i>
                        </div>
                        <h3 class="info-title">Expert Instructors</h3>
                        <p class="info-description">
                            Learn from experienced tutors with advanced degrees and real-world expertise in their fields.
                        </p>
                    </div>

                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-laptop"></i>
                        </div>
                        <h3 class="info-title">Online Learning</h3>
                        <p class="info-description">
                            Convenient online sessions that you can join from anywhere with just a computer and internet connection.
                        </p>
                    </div>

                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-chart-line"></i>
                        </div>
                        <h3 class="info-title">Personalized Approach</h3>
                        <p class="info-description">
                            Each session is tailored to your specific learning needs and academic goals.
                        </p>
                    </div>

                    <div class="info-card">
                        <div class="info-icon">
                            <i class="fas fa-headset"></i>
                        </div>
                        <h3 class="info-title">24/7 Support</h3>
                        <p class="info-description">
                            Get help whenever you need it. Our support team is available around the clock.
                        </p>
                    </div>
                </div>
            </div>
        </section>

        <!-- Next Steps Section -->
        <section class="schedule-next-steps">
            <div class="next-steps-content">
                <h2 class="next-steps-title">What Happens Next?</h2>
                <div class="steps-grid">
                    <div class="step-item">
                        <div class="step-number">1</div>
                        <h3 class="step-title">Confirmation</h3>
                        <p class="step-description">
                            You'll receive an email confirmation with session details and meeting link.
                        </p>
                    </div>
                    <div class="step-item">
                        <div class="step-number">2</div>
                        <h3 class="step-title">Preparation</h3>
                        <p class="step-description">
                            Prepare any questions or materials you'd like to cover during your session.
                        </p>
                    </div>
                    <div class="step-item">
                        <div class="step-number">3</div>
                        <h3 class="step-title">Learning</h3>
                        <p class="step-description">
                            Join your session and start learning with your dedicated tutor.
                        </p>
                    </div>
                </div>
            </div>
        </section>
    </main>

    <%- include("./partials/footer.ejs") %>

    <!-- JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="/js/navigation.js"></script>
    <script src="/js/main.js"></script>
    <script>
        let tutorTimes = {}
        let classesTutors = {}
        let datePicker

        document.addEventListener("DOMContentLoaded", async function () {
            try {
                tutorTimes = await fetchJson("/resources/tutorTimes.json")
                classesTutors = await fetchJson("/resources/coursesTutors.json");

                datePicker = flatpickr("#date", {
                    enableTime: false, 
                    dateFormat: "Y-m-d",
                    disable: [],
                    minDate: "today",
                    onChange: function(selectedDates, dateStr) {
                        updateTimes(dateStr)
                        clearFieldError('date')
                    },
                })

                const courseSelect = document.getElementById("course")
                courseSelect.addEventListener("change", onClassChange)

                // Form submission handler
                document.getElementById('scheduleForm').addEventListener('submit', function(e) {
                    e.preventDefault()
                    validateAndSubmitAppointment()
                })

            } catch (error) {
                console.error('Failed to initialize schedule page:', error)
                showAlert('error', 'Failed to load scheduling data. Please refresh the page.')
            }
        })

        async function fetchJson(url) {
            const response = await fetch(url)
            if (!response.ok) {
                throw new Error(`Failed to fetch ${url}: ${response.statusText}`)
            }
            return await response.json()
        }

        function onClassChange() {
            const selectedClass = document.getElementById("course").value
            const tutor = classesTutors[selectedClass]

            const dateContainer = document.getElementById("dateContainer")
            const timeContainer = document.getElementById("timeContainer")

            // Clear previous selections
            document.getElementById("date").value = ""
            document.getElementById("time").innerHTML = '<option value="" disabled selected>Choose your preferred time...</option>'
            
            // Show/hide containers
            if (tutor) {
                dateContainer.style.display = "block"
                const availableDates = Object.keys(tutorTimes[tutor] || {})
                updateDatePicker(availableDates)
            } else {
                dateContainer.style.display = "none"
            }
            
            timeContainer.style.display = "none"
            clearFieldError('course')
            hideAlert()
        }

        function updateDatePicker(availableDates) {
            const formattedDates = availableDates.map((date) => date.toString())

            if (datePicker) {
                datePicker.set("disable", [
                    function (date) {
                        const dateStr = date.toISOString().split("T")[0]
                        return !formattedDates.includes(dateStr)
                    },
                ]);
                datePicker.redraw()
            }
        }

        function updateTimes(date) {
            const timeSelect = document.getElementById("time")
            timeSelect.innerHTML = '<option value="" disabled selected>Choose your preferred time...</option>'

            const timeContainer = document.getElementById("timeContainer")
            const selectedClass = document.getElementById("course").value
            const tutor = classesTutors[selectedClass]

            if (tutor && date) {
                const availableTimesForDate = tutorTimes[tutor]?.[date] || []

                if (availableTimesForDate.length === 0) {
                    timeContainer.style.display = "none"
                    showAlert('warning', 'No available times for this date. Please select a different date.')
                } else {
                    hideAlert()
                    availableTimesForDate.forEach((time) => {
                        const option = document.createElement("option")
                        option.value = time
                        option.textContent = time
                        timeSelect.appendChild(option)
                    });
                    timeContainer.style.display = "block"
                }
            } else {
                timeContainer.style.display = "none"
            }
        }

        function validateAndSubmitAppointment() {
            const course = document.getElementById("course").value
            const date = document.getElementById("date").value
            const time = document.getElementById("time").value

            // Clear previous errors
            clearErrors()

            let hasErrors = false

            if (!course) {
                showFieldError('course', 'Please select a course')
                hasErrors = true
            }

            if (!date) {
                showFieldError('date', 'Please select a date')
                hasErrors = true
            }

            if (!time) {
                showFieldError('time', 'Please select a time')
                hasErrors = true
            }

            if (hasErrors) {
                showAlert('error', 'Please fill in all required fields')
                return
            }

            submitAppointment()
        }
        
        async function submitAppointment() {
            const course = document.getElementById("course").value
            const date = document.getElementById("date").value
            const time = document.getElementById("time").value

            const submitButton = document.getElementById('submitButton')
            const buttonText = document.getElementById('buttonText')
            const buttonSpinner = document.getElementById('buttonSpinner')

            // Show loading state
            submitButton.disabled = true
            buttonText.style.display = 'none'
            buttonSpinner.style.display = 'block'

            try {
                const result = await fetch("/api/schedule-appointment", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({
                        course,
                        date,
                        time
                    }),
                })

                const message = await result.json()
                
                if (result.ok) {
                    showAlert('success', message["message"])
                    document.getElementById('scheduleForm').reset()
                    document.getElementById("dateContainer").style.display = "none"
                    document.getElementById("timeContainer").style.display = "none"
                    
                    setTimeout(() => {
                        window.location.href = "/"
                    }, 2000)
                } else {
                    showAlert('error', message["message"])
                }
            } catch (error) {
                console.error('Appointment submission error:', error)
                showAlert('error', 'An error occurred. Please try again.')
            } finally {
                resetButton()
            }
        }

        function resetButton() {
            const submitButton = document.getElementById('submitButton')
            const buttonText = document.getElementById('buttonText')
            const buttonSpinner = document.getElementById('buttonSpinner')
            
            submitButton.disabled = false
            buttonText.style.display = 'flex'
            buttonSpinner.style.display = 'none'
        }

        function showAlert(type, message) {
            const alert = document.getElementById('scheduleAlert')
            const alertMessage = document.getElementById('alertMessage')
            const icon = alert.querySelector('i')
            
            alert.className = `schedule-alert ${type}`
            alertMessage.textContent = message
            
            if (type === 'success') {
                icon.className = 'fas fa-check-circle'
            } else if (type === 'error') {
                icon.className = 'fas fa-exclamation-circle'
            } else if (type === 'warning') {
                icon.className = 'fas fa-exclamation-triangle'
            } else {
                icon.className = 'fas fa-info-circle'
            }
            
            alert.style.display = 'flex'
            
            // Auto-hide warnings and info messages
            if (type === 'warning' || type === 'info') {
                setTimeout(() => {
                    alert.style.display = 'none'
                }, 5000)
            }
        }

        function hideAlert() {
            const alert = document.getElementById('scheduleAlert')
            alert.style.display = 'none'
        }

        function showFieldError(fieldId, message) {
            const field = document.getElementById(fieldId)
            const errorDiv = document.getElementById(fieldId + 'Error')
            const errorSpan = errorDiv.querySelector('span')
            
            field.classList.add('error')
            errorSpan.textContent = message
            errorDiv.style.display = 'flex'
        }

        function clearFieldError(fieldId) {
            const field = document.getElementById(fieldId)
            const errorDiv = document.getElementById(fieldId + 'Error')
            
            field.classList.remove('error')
            errorDiv.style.display = 'none'
        }

        function clearErrors() {
            const fields = ['course', 'date', 'time']
            fields.forEach(fieldId => {
                clearFieldError(fieldId)
            })
            hideAlert()
        }

        // Real-time validation
        document.getElementById('course').addEventListener('change', function() {
            if (this.value) {
                clearFieldError('course')
            }
        })

        document.getElementById('time').addEventListener('change', function() {
            if (this.value) {
                clearFieldError('time')
            }
        })
    </script>
</body>
</html>